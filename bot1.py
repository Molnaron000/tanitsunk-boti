import streamlit as st
import google.generativeai as genai # A Gemini API h√≠v√°s√°hoz
import os # K√∂rnyezeti v√°ltoz√≥k kezel√©s√©hez
from dotenv import load_dotenv # .env f√°jl bet√∂lt√©s√©hez

# --- 0. L√âP√âS: A Gemini API kulcs be√°ll√≠t√°sa ---
# Ezt az API kulcsot fogjuk haszn√°lni a Gemini modell el√©r√©s√©hez.
# Biztons√°gi okokb√≥l EGYM√ÅSRA FONTOS, hogy ne √≠rd be k√∂zvetlen√ºl ide a k√≥dban az API kulcsodat!
# Haszn√°lni fogunk egy .env f√°jlt.

load_dotenv() # Bet√∂lti a k√∂rnyezeti v√°ltoz√≥kat a .env f√°jlb√≥l
GOOGLE_API_KEY = os.getenv("GOOGLE_API_KEY")

if not GOOGLE_API_KEY:
    st.error("A Google API kulcs nem tal√°lhat√≥! K√©rlek, hozz l√©tre egy .env f√°jlt a bot1.py mell√©, √©s add hozz√° a GOOGLE_API_KEY=YOUR_API_KEY_HERE sort.")
    st.stop() # Le√°ll√≠tja az alkalmaz√°st, ha nincs kulcs

genai.configure(api_key=GOOGLE_API_KEY)

# Inicializ√°ljuk a Gemini modellt
# A 'gemini-pro' modell a sz√∂veges besz√©lget√©sekhez val√≥.
model = genai.GenerativeModel('gemini-pro')

# --- 1. L√âP√âS: A bot "agya" (most m√°r Gemini h√≠v√°ssal) ---
def ajanlo_bot_valasz(felhasznalo_kerdese):
    felhasznalo_kerdese_kisbetus = felhasznalo_kerdese.lower()

    # Itt vannak az el≈ëre beprogramozott, specifikus szab√°lyok
    # Ezeket a szab√°lyokat a Gemini v√°laszai fel√ºl√≠rhatj√°k, ha nem tal√°lunk egyez√©st
    if "jelentkez√©s" in felhasznalo_kerdese_kisbetus:
        return "A 'Tan√≠tsunk Magyarorsz√°g√©rt' programra val√≥ jelentkez√©shez keresd fel a hivatalos weboldalukat, ahol megtal√°lod a jelentkez√©si ≈±rlapot √©s a pontos felt√©teleket. (Ez egy be√©p√≠tett v√°lasz)"
    elif "felt√©tel" in felhasznalo_kerdese_kisbetus:
        return "A programban val√≥ r√©szv√©tel alapvet≈ë felt√©telei k√∂z√© tartozik a fels≈ëfok√∫ v√©gzetts√©g, √©s elk√∂telezetts√©g a h√°tr√°nyos helyzet≈± di√°kok seg√≠t√©se ir√°nt. Pontosabb inform√°ci√≥k√©rt k√©rlek l√°togass el a Tan√≠tsunk Magyarorsz√°g√©rt weboldal√°ra. (Ez egy be√©p√≠tett v√°lasz)"
    elif "program" in felhasznalo_kerdese_kisbetus and ("mi" in felhasznalo_kerdese_kisbetus or "melyik" in felhasznalo_kerdese_kisbetus):
        return "A 'Tan√≠tsunk Magyarorsz√°g√©rt' program c√©lja, hogy elk√∂telezett fiatal diplom√°sokat k√©pezzen mentorokk√°, akik h√°tr√°nyos helyzet≈± vid√©ki iskol√°kban seg√≠tenek a di√°koknak kibontakozni √©s sikeresebb√© v√°lni. (Ez egy be√©p√≠tett v√°lasz)"
    elif "k√∂sz√∂n√∂m" in felhasznalo_kerdese_kisbetus or "k√∂szi" in felhasznalo_kerdese_kisbetus:
        return "Sz√≠vesen! M√©g miben seg√≠thetek? (Ez egy be√©p√≠tett v√°lasz)"
    
    # Ha az el≈ëz≈ë szab√°lyok egyike sem illeszkedik, akkor k√©rdezz√ºk meg a Geminit
    try:
        # Itt k√ºldj√ºk el a k√©rd√©st a Gemini modellnek
        response = model.generate_content(
            f"""Te egy seg√≠t≈ë, empatikus, l√©p√©sr≈ël l√©p√©sre magyar√°z√≥ mentori AI vagy, akinek a neve Tan√≠tsunk Boti.
            Egyetemi hallgat√≥kat t√°mogatsz abban, hogy 5-8. oszt√°lyos di√°kokat eredm√©nyesen, √©rthet≈ëen, √©lm√©nyszer≈±en tan√≠tsanak k√ºl√∂nb√∂z≈ë tant√°rgyakban,
            valamint kultur√°lis, sport- √©s k√∂z√∂ss√©gi programokon kereszt√ºl fejlessz√©k a gyerekeket.
            Jelenleg m√©g nincs hozz√°f√©r√©sed specifikus adatb√°zishoz, ez√©rt √°ltal√°nos tud√°sod alapj√°n v√°laszolj.

            Felhaszn√°l√≥ k√©rd√©se: {felhasznalo_kerdese}
            """
        )
        return response.text
    except Exception as e:
        return f"Sajn√°lom, hiba t√∂rt√©nt a Gemini modell h√≠v√°sa sor√°n: {e}. K√©rlek, ellen≈ërizd az API kulcsodat √©s internetkapcsolatodat."


# --- 2. L√âP√âS: Streamlit Fel√ºlet ---

st.set_page_config(layout="centered", page_title="TM Programaj√°nl√≥ Bot")

st.title("üìö TM Programaj√°nl√≥ Bot")
st.markdown("""
    √údv! Ez a bot seg√≠ts√©get ny√∫jt a **'Tan√≠tsunk Magyarorsz√°g√©rt' programmal** kapcsolatos alapvet≈ë k√©rd√©sekben.
    Jelenleg m√©g az √°ltal√°nos tud√°somra t√°maszkodom a specifikus adatok hi√°ny√°ban,
    de hamarosan k√©pes leszek a 'Tan√≠tsunk Magyarorsz√°g√©rt' program hivatalos dokumentumaib√≥l v√°laszolni!
    """)

# Kezdem√©nyezz√ºk a besz√©lget√©si el≈ëzm√©nyt, ha m√©g nincs
if 'conversation_history' not in st.session_state:
    st.session_state.conversation_history = ["**TM Bot:** Szia! Miben seg√≠thetek a 'Tan√≠tsunk Magyarorsz√°g√©rt' programmal kapcsolatban?"]

# Besz√©lget√©si el≈ëzm√©nyek megjelen√≠t√©se
for message in st.session_state.conversation_history:
    st.markdown(message)

# Felhaszn√°l√≥i beviteli mez≈ë
user_input = st.chat_input("K√©rdezz a programr√≥l... (pl. Hogyan lehet jelentkezni?)")

if user_input:
    # A felhaszn√°l√≥ k√©rd√©se
    st.session_state.conversation_history.append(f"**Te:** {user_input}")

    # "Gondolkod√≥" √°llapot
    with st.spinner("A bot gondolkodik..."):
        # H√≠vjuk a bot "agy√°t"
        bot_valasz = ajanlo_bot_valasz(user_input)
        st.session_state.conversation_history.append(f"**TM Bot:** {bot_valasz}")
    st.rerun() # Friss√≠ti az oldalt, hogy megjelenjen az √∫j √ºzenet

st.write("---")
st.info("Ez egy kezdeti bot a 'Tan√≠tsunk Magyarorsz√°g√©rt' programhoz. A v√°laszok most m√°r a Gemini AI-t√≥l sz√°rmazhatnak, de m√©g nem haszn√°l specifikus adatb√°zisokat.")