import streamlit as st
import google.generativeai as genai
import json
from google.oauth2 import service_account
from google.cloud import storage
import pandas as pd
import PyPDF2
import io

# --- 0. L√âP√âS: A Gemini API kulcs be√°ll√≠t√°sa ---
# A Streamlit Cloud a Secrets-b≈ël olvassa az API kulcsot
try:
    genai.configure(api_key=st.secrets['GOOGLE_API_KEY'])
    model = genai.GenerativeModel('gemini-2.0-flash') # A modell nevedet hagyd √≠gy, ahogy be√°ll√≠tottad, vagy friss√≠tsd, ha m√°s
except Exception as e:
    st.error(f"Hiba t√∂rt√©nt a Gemini API konfigur√°l√°sakor. K√©rj√ºk, ellen≈ërizze a 'GOOGLE_API_KEY' titkot a Streamlit Secrets-ben. Hiba: {e}")
    st.stop() # Meg√°ll√≠tja az alkalmaz√°st, ha nincs API kulcs

# Google Cloud Storage hiteles√≠t√©s a Streamlit Secrets-b≈ël
try:
    gcp_service_account_info = json.loads(st.secrets['gcp_service_account_json'])
    credentials = service_account.Credentials.from_service_account_info(gcp_service_account_info)
    storage_client = storage.Client(credentials=credentials)
    st.success("‚úÖ Google Cloud Storage kapcsolat akt√≠v")
except Exception as e:
    st.error(f"Hiba a Google Cloud Storage hiteles√≠t√©s√©n√©l. K√©rj√ºk, ellen≈ërizze a 'gcp_service_account_json' titkot a Streamlit Secrets-ben. Hiba: {e}")
    st.stop() # Meg√°ll√≠tja az alkalmaz√°st, ha nincs GCS hiteles√≠t√©s

# --- 1. L√âP√âS: A bot "agya" (most m√°r Gemini h√≠v√°ssal) ---
def ajanlo_bot_valasz(felhasznalo_kerdese):
    felhasznalo_kerdese_kisbetus = felhasznalo_kerdese.lower()

    if "jelentkez√©s" in felhasznalo_kerdese_kisbetus:
        return "A 'Tan√≠tsunk Magyarorsz√°g√©rt' programra val√≥ jelentkez√©shez keresd fel a hivatalos weboldalukat, ahol megtal√°lod a jelentkez√©si ≈±rlapot √©s a pontos felt√©teleket. (Ez egy be√©p√≠tett v√°lasz)"
    elif "felt√©tel" in felhasznalo_kerdese_kisbetus:
        return "A programban val√≥ r√©szv√©tel alapvet≈ë felt√©telei k√∂z√© tartozik a fels≈ëfok√∫ v√©gzetts√©g, √©s elk√∂telezetts√©g a h√°tr√°nyos helyzet≈± di√°kok seg√≠t√©se ir√°nt. Pontosabb inform√°ci√≥k√©rt k√©rlek l√°togass el a Tan√≠tsunk Magyarorsz√°g√©rt weboldal√°ra. (Ez egy be√©p√≠tett v√°lasz)"
    elif "program" in felhasznalo_kerdese_kisbetus and ("mi" in felhasznalo_kerdese_kisbetus or "melyik" in felhasznalo_kerdese_kisbetus):
        return "A 'Tan√≠tsunk Magyarorsz√°g√©rt' program c√©lja, hogy elk√∂telezett fiatal diplom√°sokat k√©pezzen mentorokk√°, akik h√°tr√°nyos helyzet≈± vid√©ki iskol√°kban seg√≠tenek a di√°koknak kibontakozni √©s sikeresebb√© v√°lni. (Ez egy be√©p√≠tett v√°lasz)"
    elif "k√∂sz√∂n√∂m" in felhasznalo_kerdese_kisbetus or "k√∂szi" in felhasznalo_kerdese_kisbetus:
        return "Sz√≠vesen! M√©g miben seg√≠thetek? (Ez egy be√©p√≠tett v√°lasz)"

    try:
        response = model.generate_content(
            f"""Te egy seg√≠t≈ë, empatikus, l√©p√©sr≈ël l√©p√©sre magyar√°z√≥ mentori AI vagy, akinek a neve Tan√≠tsunk Boti.
            Egyetemi hallgat√≥kat t√°mogatsz abban, hogy 5-8. oszt√°lyos di√°kokat eredm√©nyesen, √©rthet≈ëen, √©lm√©nyszer≈±en tan√≠tsanak k√ºl√∂nb√∂z≈ë tant√°rgyakban,
            valamint kultur√°lis, sport- √©s k√∂z√∂ss√©gi programokon kereszt√ºl fejlessz√©k a gyerekeket.
            Jelenleg m√©g nincs hozz√°f√©r√©sed specifikus adatb√°zishoz, ez√©rt √°ltal√°nos tud√°sod alapj√°n v√°laszolj.

            Felhaszn√°l√≥ k√©rd√©se: {felhasznalo_kerdese}
            """
        )
        return response.text
    except Exception as e:
        return f"Sajn√°lom, hiba t√∂rt√©nt a Gemini modell h√≠v√°sa sor√°n: {e}. K√©rlek, ellen≈ërizd az API kulcsodat √©s internetkapcsolatodat."

# --- 2. L√âP√âS: GCS f√°jlbeolvas√°s (PDF/Excel) ---
def read_pdf_from_gcs(bucket_name, file_name):
    bucket = storage_client.bucket(bucket_name)
    blob = bucket.blob(file_name)
    try:
        pdf_bytes = blob.download_as_bytes()
        pdf_reader = PyPDF2.PdfReader(io.BytesIO(pdf_bytes))
        text = ""
        for page in pdf_reader.pages:
            text += page.extract_text()
        return text
    except Exception as e:
        st.error(f"Hiba a PDF olvas√°sakor: {e}")
        return None

def read_excel_from_gcs(bucket_name, file_name):
    bucket = storage_client.bucket(bucket_name)
    blob = bucket.blob(file_name)
    try:
        excel_bytes = blob.download_as_bytes()
        df = pd.read_excel(io.BytesIO(excel_bytes))
        return df
    except Exception as e:
        st.error(f"Hiba az Excel olvas√°sakor: {e}")
        return None

# --- 3. L√âP√âS: Streamlit Fel√ºlet ---

st.set_page_config(layout="centered", page_title="Tan√≠tsunk Boti")

st.title("Tan√≠tsunk Boti")
st.markdown("""
    Szia! Boti seg√≠ts√©get ny√∫jt a **'Neumann J√°nos Egyetem Tan√≠tsunk Magyarorsz√°g√©rt' program mentorainak**.
    Jelenleg m√©g az √°ltal√°nos tud√°somra t√°maszkodom a specifikus adatok hi√°ny√°ban,
    de hamarosan k√©pes leszek a 'Tan√≠tsunk Magyarorsz√°g√©rt' program dokumentumaib√≥l v√°laszolni!
    """)

if 'conversation_history' not in st.session_state:
    st.session_state.conversation_history = ["**Tan√≠tsunk Boti:** Szia! Miben seg√≠thetek a 'Tan√≠tsunk Magyarorsz√°g√©rt' programmal kapcsolatban?"]

for message in st.session_state.conversation_history:
    st.markdown(message)

user_input = st.chat_input("Miben seg√≠thetek?")

if user_input:
    st.session_state.conversation_history.append(f"**Te:** {user_input}")

    with st.spinner("Boti gondolkodik..."):
        bot_valasz = ajanlo_bot_valasz(user_input)
        st.session_state.conversation_history.append(f"**Tan√≠tsunk Boti:** {bot_valasz}")
    st.rerun()

# --- 4. L√âP√âS: Teszt gombok f√°jlbeolvas√°shoz ---
st.write("---")
st.subheader("üìÑ Dokumentum tesztel√©s GCS-b≈ël")

# FIGYELEM: CSER√âLD KI EZT A BUCKET NEVET A SAJ√ÅT GCP BUCKETED NEV√âRE!
bucket_name = "tanitsunk-boti-dokumentumok-2025" # P√©lda: "tanitsunk-boti-dokumentumok-2025"

pdf_file = "teszt.pdf" # Gy≈ëz≈ëdj meg r√≥la, hogy ilyen nev≈± PDF van felt√∂ltve a GCS bucketedbe
excel_file = "adatok.xlsx" # Gy≈ëz≈ëdj meg r√≥la, hogy ilyen nev≈± Excel van felt√∂ltve a GCS bucketedbe

if st.button("PDF megnyit√°sa"):
    pdf_text = read_pdf_from_gcs(bucket_name, pdf_file)
    st.text_area("üìÑ PDF tartalom:", pdf_text or "Nem siker√ºlt beolvasni.")

if st.button("Excel megnyit√°sa"):
    df = read_excel_from_gcs(bucket_name, excel_file)
    if df is not None:
        st.dataframe(df)
    else:
        st.warning("Nem siker√ºlt beolvasni az Excelt.")

st.write("---")
st.info("Ez egy kezdeti bot a 'Neumann J√°nos Egyetem Tan√≠tsunk Magyarorsz√°g√©rt' programhoz. A v√°laszok most m√°r a Gemini AI-t√≥l sz√°rmazhatnak, √©s dokumentumokat is tudok olvasni a Google Cloud Storage-b√≥l!")